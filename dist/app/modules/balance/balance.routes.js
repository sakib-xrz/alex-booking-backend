"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceRoutes = void 0;
const express_1 = require("express");
const balance_controller_1 = require("./balance.controller");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const client_1 = require("@prisma/client");
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const balance_validation_1 = __importDefault(require("./balance.validation"));
const router = (0, express_1.Router)();
router.get('/my-balance', (0, auth_1.default)(client_1.Role.COUNSELOR), balance_controller_1.BalanceController.getMyBalance);
router.get('/my-transactions', (0, auth_1.default)(client_1.Role.COUNSELOR), (0, validateRequest_1.default)(balance_validation_1.default.balanceFiltersSchema), balance_controller_1.BalanceController.getMyBalanceTransactions);
router.get('/all', (0, auth_1.default)(client_1.Role.SUPER_ADMIN), (0, validateRequest_1.default)(balance_validation_1.default.counsellorBalanceFiltersSchema), balance_controller_1.BalanceController.getAllCounsellorBalances);
router.get('/:counsellor_id', (0, auth_1.default)(client_1.Role.SUPER_ADMIN), balance_controller_1.BalanceController.getCounsellorBalance);
router.get('/:counsellor_id/transactions', (0, auth_1.default)(client_1.Role.SUPER_ADMIN), (0, validateRequest_1.default)(balance_validation_1.default.balanceFiltersSchema), balance_controller_1.BalanceController.getBalanceTransactions);
router.patch('/:counsellor_id/adjust', (0, auth_1.default)(client_1.Role.SUPER_ADMIN), (0, validateRequest_1.default)(balance_validation_1.default.adjustBalanceSchema), balance_controller_1.BalanceController.adjustBalance);
router.patch('/:counsellor_id/set-values', (0, auth_1.default)(client_1.Role.SUPER_ADMIN), (0, validateRequest_1.default)(balance_validation_1.default.setBalanceValuesSchema), balance_controller_1.BalanceController.setBalanceValues);
exports.BalanceRoutes = router;
